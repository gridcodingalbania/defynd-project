# Generated by Django 3.1.7 on 2021-04-28 09:47

import costStatements.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('clients', '0001_initial'),
        ('litigations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CostStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=costStatements.models.increment_costStatement_number, max_length=100, verbose_name='Nome')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='clients.customer', verbose_name='Cliente')),
                ('litigation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='litigations.litigation', verbose_name='Litigation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utente')),
            ],
            options={
                'db_table': 'cost_statement',
            },
        ),
        migrations.CreateModel(
            name='Hypothesis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='Descrizione')),
            ],
            options={
                'db_table': 'hypothesis',
            },
        ),
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome della categoria')),
                ('compute_code', models.TextField(blank=True, default='\n                    # Available calculation:\n                    #----------------------\n                    # category: object\n                    # NAME -> Category\n\n                    # Usage examples\n                    #----------------------\n                    # 1. (NAME) * 0.4\n                    # 2. (RICAVI) - (COSTO DIRETTI)', null=True, verbose_name='Expression Formula')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('code', models.CharField(max_length=100, verbose_name='Codice')),
                ('priority', models.IntegerField(blank=True, null=True, verbose_name='PrioritÃ ')),
                ('expression', models.TextField(blank=True, default='\n                    # Available calculation:\n                    #----------------------\n                    # item CODE: object :: cost items\n                    # CODE.value -> Cost Statement Item Value\n                    # CODE.percentage -> Cost Statement Item %\n\n                    # Usage examples\n                    #----------------------\n                    # 1. (CODE.value) * (CODE.percentage)\n                    # 2. (CODE.value) * 0.10', null=True, verbose_name='Formula di espressione')),
                ('include_in_cost', models.BooleanField(db_index=True, default=True, verbose_name='Includere nella dichiarazione dei costi')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='costStatements.itemcategory', verbose_name='Categoria')),
            ],
            options={
                'db_table': 'item',
                'ordering': ['priority'],
            },
        ),
        migrations.CreateModel(
            name='CostStatementItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_value', models.FloatField(blank=True, null=True, verbose_name='Input Value')),
                ('value', models.FloatField(blank=True, null=True, verbose_name='Value')),
                ('percentage', models.FloatField(blank=True, null=True, verbose_name='%')),
                ('cost_statement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costStatements.coststatement', verbose_name='Economic Form')),
                ('hypothesis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='costStatements.hypothesis', verbose_name='Ipotesi')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costStatements.item', verbose_name='Item')),
            ],
            options={
                'db_table': 'cost_statement_item',
            },
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.UniqueConstraint(fields=('code',), name='unique_code'),
        ),
    ]
